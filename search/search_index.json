{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cockroachdb-mcp-server","text":"<p>A Model Context Protocol (MCP) server implemented in Python using FastAPI and CockroachDB.</p>"},{"location":"#what-this-is","title":"\ud83e\udde0 What This Is","text":"<p><code>cockroachdb-mcp-server</code> is a production-grade, spec-aligned MCP server that:</p> <ul> <li>Implements the Model Context Protocol</li> <li>Uses CockroachDB as a resilient, SQL-compatible backend</li> <li>Exposes full CRUD APIs for managing model contexts</li> <li>Stores context definitions as JSONB, allowing arbitrary input/output schema</li> <li>Works seamlessly with the <code>cockroachdb-mcp-client</code> CLI</li> </ul>"},{"location":"#feature-highlights","title":"\u2705 Feature Highlights","text":"<ul> <li>\u2705 REST API for MCP context management (<code>/contexts</code>)</li> <li>\u2705 Schema bootstrapping via CLI flag or env var</li> <li>\u2705 CRDB URL auto-detection and dialect fix</li> <li>\u2705 Structured logging and configurable log level</li> <li>\u2705 Ready for <code>/run</code>, <code>/deploy</code>, <code>/evaluate</code> extensions</li> </ul>"},{"location":"#quickstart","title":"\ud83d\ude80 Quickstart","text":""},{"location":"#install-from-pypi","title":"\ud83d\udce6 Install from PyPI","text":"<pre><code>pip install cockroachdb-mcp-server\n````\n\n### \ud83c\udfc3 Run with schema init\n\n```bash\ncockroachdb-mcp-server serve --init-schema --log-level INFO\n</code></pre> <p>Or:</p> <pre><code>export MCP_AUTO_INIT_SCHEMA=true\ncockroachdb-mcp-server serve\n</code></pre> <p>Server runs at <code>http://localhost:8081</code> by default</p>"},{"location":"#cli-usage","title":"\ud83d\udd27 CLI Usage","text":"<pre><code>cockroachdb-mcp-server serve --init-schema\ncockroachdb-mcp-server serve --port 8081 --host 127.0.0.1 --reload\ncockroachdb-mcp-server --version\n</code></pre>"},{"location":"#configuring-the-database","title":"\ud83d\udd10 Configuring the Database","text":""},{"location":"#set-the-crdb_url-environment-variable","title":"\u2705 Set the <code>CRDB_URL</code> environment variable","text":"<pre><code>export CRDB_URL=\"postgresql://root@localhost:26257/defaultdb?sslmode=disable\"\n</code></pre> <p>Automatically rewritten to <code>cockroachdb://...</code> under the hood for compatibility.</p> <p>Alternatively, set it directly:</p> <pre><code>export CRDB_URL=\"cockroachdb://root@localhost:26257/defaultdb?sslmode=disable\"\n</code></pre> <p>\u2705 Both formats are supported.</p>"},{"location":"#api-endpoints","title":"\ud83e\uddea API Endpoints","text":"Method Path Description POST <code>/contexts</code> Create a context GET <code>/contexts</code> List all contexts GET <code>/contexts/{id}</code> Get context by ID PUT <code>/contexts/{id}</code> Update context DELETE <code>/contexts/{id}</code> Delete context <p>\ud83d\udcd8 View full API reference \u2192</p> <p>\ud83d\udcd8 View hosted API Docs</p>"},{"location":"#schema-auto-bootstrap","title":"\ud83e\uddf1 Schema Auto-Bootstrap","text":"<p>Run this manually:</p> <pre><code>cockroachdb-mcp-server serve --init-schema\n</code></pre> <p>Or automatically with:</p> <pre><code>export MCP_AUTO_INIT_SCHEMA=true\n</code></pre> <p>The schema created is:</p> <pre><code>CREATE TABLE IF NOT EXISTS mcp_contexts (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  context_name STRING NOT NULL,\n  context_version STRING NOT NULL,\n  body JSONB NOT NULL,\n  created_at TIMESTAMP DEFAULT now()\n);\n</code></pre>"},{"location":"#related-projects","title":"\ud83d\udd17 Related Projects","text":"<ul> <li>cockroachdb-mcp-client: CLI tool to manage MCP contexts, simulate LLM runs, export, and batch simulate across providers.</li> </ul>"},{"location":"api/","title":"\ud83d\udcd8 API Reference: <code>cockroachdb-mcp-server</code>","text":"<p>This document describes the full HTTP API surface of the CockroachDB MCP Server implementation.</p>"},{"location":"api/#overview","title":"\ud83e\udde0 Overview","text":"<p>All endpoints follow RESTful conventions and are aligned with the Model Context Protocol (MCP).</p> <ul> <li>Base URL: <code>http://localhost:8081</code> (by default)</li> <li>Content-Type: <code>application/json</code></li> <li>Auth: Optional (token-based support planned)</li> </ul>"},{"location":"api/#healthz","title":"\ud83d\udd04 <code>/healthz</code>","text":"<p>Check server health and readiness.</p>"},{"location":"api/#request","title":"Request","text":"<pre><code>GET /healthz\n````\n\n### Response\n\n```json\n{ \"status\": \"ok\" }\n</code></pre>"},{"location":"api/#contexts","title":"\ud83d\udce6 <code>/contexts</code>","text":"<p>The main endpoint for creating, listing, retrieving, updating, and deleting contexts.</p>"},{"location":"api/#post-contexts-create-a-context","title":"<code>POST /contexts</code> \u2014 Create a Context","text":"<p>Create a new MCP-compatible context.</p>"},{"location":"api/#request-body","title":"Request Body","text":"<pre><code>{\n  \"context_name\": \"summarizer\",\n  \"context_version\": \"1.0.0\",\n  \"body\": {\n    \"inputs\": [\"text\"],\n    \"outputs\": [\"summary\"],\n    \"description\": \"Summarize any block of text.\"\n  }\n}\n</code></pre>"},{"location":"api/#example","title":"Example","text":"<pre><code>curl -X POST http://localhost:8081/contexts \\\n  -H \"Content-Type: application/json\" \\\n  -d @context.json\n</code></pre>"},{"location":"api/#response","title":"Response","text":"<pre><code>{\n  \"status\": \"created\",\n  \"context_name\": \"summarizer\"\n}\n</code></pre>"},{"location":"api/#get-contexts-list-contexts","title":"<code>GET /contexts</code> \u2014 List Contexts","text":"<p>Returns all registered contexts (minimal metadata).</p> <pre><code>curl http://localhost:8081/contexts\n</code></pre> <pre><code>{\n  \"contexts\": [\n    {\n      \"id\": \"abc123-uuid\",\n      \"context_name\": \"summarizer\",\n      \"context_version\": \"1.0.0\",\n      \"created_at\": \"2025-06-11T15:30:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#get-contextsid-get-by-id","title":"<code>GET /contexts/{id}</code> \u2014 Get by ID","text":"<p>Retrieve full context metadata and body.</p> <pre><code>curl http://localhost:8081/contexts/abc123-uuid\n</code></pre>"},{"location":"api/#put-contextsid-replace-a-context","title":"<code>PUT /contexts/{id}</code> \u2014 Replace a Context","text":"<p>Submit full replacement for the context (same shape as POST). Partial updates not supported.</p>"},{"location":"api/#delete-contextsid-remove-a-context","title":"<code>DELETE /contexts/{id}</code> \u2014 Remove a Context","text":"<pre><code>curl -X DELETE http://localhost:8081/contexts/abc123-uuid\n</code></pre>"},{"location":"api/#debug-demo-diagnostics","title":"\ud83d\udc1b <code>/debug/*</code> \u2014 Demo + Diagnostics","text":"<p>\u26a0\ufe0f These endpoints are only available when the server is started with:</p> <p><code>bash export MCP_DEMO_MODE=true cockroachdb-mcp-server serve --demo-mode</code></p>"},{"location":"api/#get-debuginfo","title":"<code>GET /debug/info</code>","text":"<p>Returns basic CockroachDB metadata.</p> <pre><code>curl http://localhost:8081/debug/info\n</code></pre> <pre><code>{\n  \"database\": \"defaultdb\",\n  \"version\": \"CockroachDB CCL v25.2.1 ...\"\n}\n</code></pre>"},{"location":"api/#get-debugtables","title":"<code>GET /debug/tables</code>","text":"<p>Lists public user-defined tables in the connected CRDB instance.</p> <pre><code>curl http://localhost:8081/debug/tables\n</code></pre> <pre><code>{\n  \"tables\": [\"mcp_contexts\"]\n}\n</code></pre>"},{"location":"api/#post-debugsql","title":"<code>POST /debug/sql</code>","text":"<p>Execute a read-only SELECT SQL statement.</p>"},{"location":"api/#request_1","title":"Request","text":"<pre><code>{\n  \"query\": \"SELECT version()\"\n}\n</code></pre>"},{"location":"api/#example_1","title":"Example","text":"<pre><code>curl -X POST http://localhost:8081/debug/sql \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"query\": \"SELECT version()\"}'\n</code></pre>"},{"location":"api/#response_1","title":"Response","text":"<pre><code>[\n  { \"version\": \"CockroachDB CCL v25.2.1 ...\" }\n]\n</code></pre> <p>\u274c Any non-SELECT query will be rejected.</p>"},{"location":"api/#swagger-openapi","title":"\ud83e\uddea Swagger + OpenAPI","text":"<p>Interactive documentation is auto-generated and available at:</p> <ul> <li>Swagger UI</li> <li>ReDoc</li> <li>OpenAPI JSON</li> </ul>"},{"location":"api/#future-enhancements","title":"\ud83d\udd10 Future Enhancements","text":"<p>Planned API extensions:</p> <ul> <li><code>/run</code> \u2014 trigger LLM evaluation</li> <li><code>/evaluate</code> \u2014 scoring and comparison</li> <li><code>/deploy</code> \u2014 push to model runtime</li> </ul> <p>Stay tuned.</p>"}]}